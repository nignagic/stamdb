# Generated by Django 2.0.13 on 2019-05-11 06:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('name', models.CharField(max_length=200)),
                ('channelId', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_cd', models.IntegerField(default=0, unique=True)),
                ('company_cd', models.IntegerField(default=0)),
                ('line_name', models.CharField(max_length=200)),
                ('line_name_k', models.CharField(blank=True, max_length=200, null=True)),
                ('line_name_h', models.CharField(blank=True, max_length=200, null=True)),
                ('line_color_c', models.CharField(blank=True, max_length=200, null=True)),
                ('line_color_t', models.CharField(blank=True, max_length=200, null=True)),
                ('line_type', models.CharField(blank=True, max_length=200, null=True)),
                ('lon', models.CharField(blank=True, max_length=200, null=True)),
                ('lat', models.CharField(blank=True, max_length=200, null=True)),
                ('zoom', models.IntegerField(default=0)),
                ('e_status', models.IntegerField(default=0)),
                ('e_sort', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='動画タイトル')),
                ('main_id', models.CharField(max_length=200, unique=True, verbose_name='動画ID')),
                ('youtube_id', models.CharField(blank=True, max_length=200, verbose_name='YouTubeのID')),
                ('niconico_id', models.CharField(blank=True, max_length=200, verbose_name='ニコニコ動画のID')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='投稿日時')),
                ('duration', models.DurationField(null=True, verbose_name='動画の長さ')),
                ('n_view', models.IntegerField(blank=True, default=0, verbose_name='再生回数')),
                ('n_like', models.IntegerField(blank=True, default=0, verbose_name='高評価数')),
                ('n_dislike', models.IntegerField(blank=True, default=0, verbose_name='低評価数')),
                ('n_comment', models.IntegerField(blank=True, default=0, verbose_name='コメント数')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('reg_date', models.DateTimeField(blank=True, verbose_name='データベース登録日時')),
                ('is_collab', models.CharField(choices=[('S', '単作'), ('C', '合作')], default='S', max_length=1, verbose_name='合作か')),
                ('artist', models.ManyToManyField(blank=True, to='ekimei.Artist', verbose_name='アーティスト')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ekimei.Creator', verbose_name='投稿チャンネル')),
            ],
        ),
        migrations.CreateModel(
            name='NonListStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_g_cd', models.IntegerField(default=0)),
                ('station_name', models.CharField(max_length=200)),
                ('station_name_k', models.CharField(blank=True, max_length=200, null=True)),
                ('station_name_r', models.CharField(blank=True, max_length=200, null=True)),
                ('pref_cd', models.IntegerField(default=0)),
                ('post', models.CharField(blank=True, max_length=200, null=True)),
                ('add', models.CharField(max_length=200)),
                ('lon', models.CharField(max_length=200)),
                ('lat', models.CharField(max_length=200)),
                ('open_ymd', models.CharField(blank=True, max_length=200, null=True)),
                ('close_ymd', models.CharField(blank=True, max_length=200, null=True)),
                ('e_status', models.IntegerField(default=0)),
                ('e_sort', models.IntegerField(default=0)),
                ('line_cd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekimei.Line', to_field='line_cd')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
            ],
        ),
        migrations.CreateModel(
            name='Prefecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pref_cd', models.IntegerField(default=0)),
                ('pref_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('artist', models.ManyToManyField(to='ekimei.Artist')),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_cd', models.IntegerField(default=0, unique=True)),
                ('station_g_cd', models.IntegerField(default=0)),
                ('station_name', models.CharField(max_length=200)),
                ('station_name_k', models.CharField(blank=True, max_length=200, null=True)),
                ('station_name_r', models.CharField(blank=True, max_length=200, null=True)),
                ('pref_cd', models.IntegerField(default=0)),
                ('post', models.CharField(max_length=200)),
                ('add', models.CharField(max_length=200)),
                ('lon', models.CharField(max_length=200)),
                ('lat', models.CharField(max_length=200)),
                ('open_ymd', models.CharField(blank=True, max_length=200, null=True)),
                ('close_ymd', models.CharField(blank=True, max_length=200, null=True)),
                ('e_status', models.IntegerField(default=0)),
                ('e_sort', models.IntegerField(default=0)),
                ('line_cd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekimei.Line', to_field='line_cd')),
            ],
        ),
        migrations.CreateModel(
            name='StationInMovie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_movie', models.IntegerField()),
                ('station_name', models.CharField(max_length=200)),
                ('non_line', models.BooleanField(default=False, verbose_name='路線不定')),
                ('back_rel', models.IntegerField(default=0, verbose_name='back station relationship')),
                ('reg_date', models.DateTimeField(blank=True, null=True, verbose_name='更新日時')),
                ('creator_a', models.ManyToManyField(blank=True, related_name='audio_creator', to='ekimei.Creator')),
                ('creator_m', models.ManyToManyField(blank=True, related_name='movie_creator', to='ekimei.Creator')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekimei.Movie', to_field='main_id')),
                ('station_cd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekimei.Station', to_field='station_cd')),
                ('station_nonlist_cd', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='ekimei.NonListStation')),
            ],
        ),
        migrations.CreateModel(
            name='Vocal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='song',
            field=models.ManyToManyField(blank=True, to='ekimei.Song', verbose_name='使用楽曲'),
        ),
        migrations.AddField(
            model_name='movie',
            name='vocal',
            field=models.ManyToManyField(blank=True, to='ekimei.Vocal', verbose_name='使用ボーカル'),
        ),
        migrations.AddField(
            model_name='line',
            name='pref_cds',
            field=models.ManyToManyField(blank=True, to='ekimei.Prefecture'),
        ),
    ]
